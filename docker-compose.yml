version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: trading_postgres
    environment:
      POSTGRES_DB: trading_system
      POSTGRES_USER: trader
      POSTGRES_PASSWORD: trading_secure_2024
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --lc-collate=C --lc-ctype=C"
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-scripts:/docker-entrypoint-initdb.d
    networks:
      - trading_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U trader -d trading_system"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  # Redis for Celery task queue
  redis:
    image: redis:7-alpine
    container_name: trading_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - trading_network
    command: redis-server --appendonly yes --maxmemory 512mb --maxmemory-policy allkeys-lru
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  # pgAdmin for database management
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: trading_pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@trading.local
      PGADMIN_DEFAULT_PASSWORD: admin_secure_2024
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    ports:
      - "8080:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    networks:
      - trading_network
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped

  # Celery Worker
  celery_worker:
    build: 
      context: .
      dockerfile: Dockerfile.celery
    container_name: trading_celery_worker
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - DATABASE_URL=postgresql://trader:trading_secure_2024@postgres:5432/trading_system
    volumes:
      - ./src:/app/src
      - ./data:/app/data
      - ./logs:/app/logs
    networks:
      - trading_network
    depends_on:
      - redis
      - postgres
    restart: unless-stopped
    command: celery -A src.tasks worker --loglevel=info

  # Celery Beat (Scheduler)
  celery_beat:
    build: 
      context: .
      dockerfile: Dockerfile.celery
    container_name: trading_celery_beat
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - DATABASE_URL=postgresql://trader:trading_secure_2024@postgres:5432/trading_system
    volumes:
      - ./src:/app/src
      - ./data:/app/data
      - ./logs:/app/logs
    networks:
      - trading_network
    depends_on:
      - redis
      - postgres
    restart: unless-stopped
    command: celery -A src.tasks beat --loglevel=info

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  pgadmin_data:
    driver: local

networks:
  trading_network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16